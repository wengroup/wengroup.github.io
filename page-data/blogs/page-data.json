{"componentChunkName":"component---src-pages-blogs-index-js","path":"/blogs/","result":{"data":{"allMarkdownRemark":{"nodes":[{"html":"<h2>联系我们</h2>\n<p>电子科大基础与前沿研究院文明健老师课题组招收硕士、博士和博士后。感兴趣的同学请发送邮件到 <a href=\"mailto:mjwen@uestc.edu.cn\">mjwen@uestc.edu.cn</a> 进行申请，并附上个人简历（中英皆可）。</p>\n<h2>课题组介绍</h2>\n<p>课题组的研究领域为「数据驱动的材料设计」，通过数据科学与计算模拟相结合的方式，推动新材料的设计、开发与应用。我们的研究包含以下三个方向的交叉融合：</p>\n<ol>\n<li><strong>材料设计算法</strong>。开发机器学习、不确定性量化及材料基因组算法，探索材料结构与性能的关系；</li>\n<li><strong>跨尺度材料模拟</strong>。运用第一性原理、分子动力学及连续介质模型，研究材料在原子、微观及宏观尺度下的表界面结构、输运及力学性能；</li>\n<li><strong>能源材料与器件</strong>。围绕固态电池和锂电池，通过计算手段优化电极材料、电解质及界面设计。</li>\n</ol>\n<p>课题组导师文明健现为电子科技大学基础与前沿研究院教授，加入电子科技大学前担任美国<a href=\"https://www.chee.uh.edu\">休斯敦大学化工系助理教授</a>。本科毕业于天津大学化工学院，在美国明尼苏达大学航空工程和力学系取得博士学位，随后在伯克利国家实验室能源科技部担任博士后研究员。长期从事开源材料研究项目的开发与维护，是 <a href=\"https://next-gen.materialsproject.org\">Materials Project</a> 和 <a href=\"https://openkim.org\">KIM Initiative</a> 的核心开发成员。研究成果发表在 Nature Comput.  Sci., Rev. Chem. Eng., npj Comput. Mat., Chem. Sci. 和 Phy. Rev. B 等期刊上。曾主持<a href=\"https://www.nsf.gov/awardsearch/showAward?AWD_ID=2316667&#x26;HistoricalAwards=false\">美国自然科学基金（NSF）项目</a>，获休斯敦大学校长前沿助理教授奖等荣誉。</p>\n<h2>招生需求</h2>\n<p>如果你对我们的研究感兴趣，欢迎加入我们，共同探索计算机科学与材料科学相结合的前沿领域！</p>\n<h4>我们希望你：</h4>\n<ul>\n<li>拥有优秀的中英文写作及表达能力</li>\n<li>熟练使用至少一种编程语言（如 Python、Rust、 C++ 等）</li>\n<li>具备良好的团队沟通与合作能力</li>\n<li>对我们研究的一个或多个方向感兴趣（这点很重要）</li>\n<li>拥有计算机、材料、化工、物理、化学、力学等学科背景（具体专业不太重要）</li>\n</ul>\n<h4>以下为加分项（非必需）：</h4>\n<ul>\n<li>熟悉材料模拟软件（如 VASP、LAMMPS、Anysys 等）</li>\n<li>熟悉开源软件开发及管理工具（如 Git、GitHub、VSCode 等）</li>\n<li>发表过第一作者文章</li>\n<li>有开源软件开发与管理经验</li>\n</ul>\n<h2>研究保障</h2>\n<p>我们可以提供什么？</p>\n<ul>\n<li>优秀的课题组氛围（欢迎多方打听，包括但不限于联系之前的学生询问）</li>\n<li>专业的学术指导（从课题设计到文章撰写再到 debugging，按需提供一对一指导）</li>\n<li>广阔的就业前景（从科研机构研究员到大厂程序员再到学术界工作，本题组的知识与技能能助你两臂之力）</li>\n<li>无忧的生活保障（电子科大基础与前沿研究院为每一位博士后提供全面的支持，包括具有竞争力的薪资、住房支持等）</li>\n</ul>\n<h2>更多信息</h2>\n<ul>\n<li>课题组主页：<a href=\"https://wengroup.github.io\">https://wengroup.github.io</a></li>\n<li>基础院导师信息主页：<a href=\"https://www.iffs.uestc.edu.cn/info/1116/5944.htm\">https://www.iffs.uestc.edu.cn/info/1116/5944.htm</a></li>\n<li>电子科大研招网：<a href=\"https://yjsjy.uestc.edu.cn/gmis/jcsjgl/dsfc/dsgrjj/21435?yxsh=21\">https://yjsjy.uestc.edu.cn/gmis/jcsjgl/dsfc/dsgrjj/21435?yxsh=21</a></li>\n</ul>","id":"c3e4d1c9-1972-5c20-bb16-9b667ecd6e7e","headings":[{"depth":2,"value":"联系我们"},{"depth":2,"value":"课题组介绍"},{"depth":2,"value":"招生需求"},{"depth":4,"value":"我们希望你："},{"depth":4,"value":"以下为加分项（非必需）："},{"depth":2,"value":"研究保障"},{"depth":2,"value":"更多信息"}],"frontmatter":{"title":"电子科技大学「材料信息学」课题组招生","slug":"student-hiring","date":"March 14th, 2025","stack":["Student","Hiring","UESTC"],"description":"课题组招生"}},{"html":"<h1>Create a potential</h1>\n<p>This is an answer I prepared for the below Matter Modeling questions:</p>\n<ul>\n<li><a href=\"https://mattermodeling.stackexchange.com/questions/8932/what-are-the-open-source-or-software-code-that-can-generate-potentials\">What are the open source or software code that can generate potentials?</a></li>\n<li><a href=\"https://mattermodeling.stackexchange.com/questions/8868/are-there-any-open-source-codes-that-can-generate-lammps-potentials-from-dft-cal\">Are there any open source codes that can generate LAMMPS potentials from DFT calculations?</a></li>\n</ul>\n<p>But unfortunately, I do not have the privilege to provide an answer with more than 10 links. So, here it is.</p>\n<hr>\n<p>There are different flavors of interatomic potentials, from the classical Lennard-Jones and Morse models to more recent machine learning models. I will limit the answer to reactive potential models without considering bonded force fields.</p>\n<h2>Check existing potentials repository</h2>\n<p>Before fitting a new model, first try searching the repositories</p>\n<ul>\n<li>OpenKIM (<a href=\"https://openkim.org\">https://openkim.org</a>)</li>\n<li>NIST (<a href=\"https://www.ctcms.nist.gov/potentials/\">https://www.ctcms.nist.gov/potentials/</a>)</li>\n</ul>\n<p>to see whether you can find one that satisfies your needs.\nVia the KIM API (<a href=\"https://openkim.org/kim-api\">https://openkim.org/kim-api</a>), models archived on OpenKIM can be used in various molecular simulation codes, such as LAMMPS, ASE, DL_POLY, GULP, and ASAP. OpenKIM also provides analysis of each model (e.g. citation analysis and tests on canonical properties like cohesive energy and elastic constant), which may help you to decide whether a model satisfies your need. For an example, see <a href=\"https://openkim.org/id/EAM_Dynamo_Ackland_1992_Ti__MO_748534961139_005\">https://openkim.org/id/EAM_Dynamo_Ackland_1992_Ti__MO_748534961139_005</a>.</p>\n<h2>Build new potentials</h2>\n<p>If none satisfies the need, there are basically three steps to create a new model.</p>\n<h3>Assemble a dataset</h3>\n<p>Traditionally, potentials are fit to reproduce a set of experimental properties, but nowadays most potentials are fit to more easily obtainable properties from quantum mechanical calculations.</p>\n<p>Here are some DFT codes that can be used to generate a dataset of energy, forces, and stress for training the model.</p>\n<ul>\n<li>Quantum Espresso (open source) <a href=\"https://www.quantum-espresso.org\">https://www.quantum-espresso.org</a></li>\n<li>VASP (commercial) <a href=\"https://www.vasp.at\">https://www.vasp.at</a></li>\n<li>ABINIT (open source) <a href=\"https://www.abinit.org\">https://www.abinit.org</a></li>\n<li>SIESTA (open source) <a href=\"https://departments.icmab.es/leem/siesta/\">https://departments.icmab.es/leem/siesta/</a></li>\n<li>CP2K (open source) <a href=\"https://www.cp2k.org\">https://www.cp2k.org</a></li>\n</ul>\n<p>If you do not want to generate a dataset by yourself, some computational materials databases may have DFT data that can be used for fitting a potential, such as</p>\n<ul>\n<li>The Materials Project <a href=\"https://materialsproject.org\">https://materialsproject.org</a></li>\n<li>AFLOW <a href=\"http://www.aflowlib.org\">http://www.aflowlib.org</a></li>\n<li>OQMD <a href=\"https://oqmd.org\">https://oqmd.org</a></li>\n<li>NOMAD <a href=\"https://nomad-lab.eu\">https://nomad-lab.eu</a></li>\n<li>JARVIS <a href=\"https://jarvis.nist.gov\">https://jarvis.nist.gov</a></li>\n</ul>\n<h3>Train the model</h3>\n<p>Given a dataset, many open-source codes can be used to fit a potential. Below are some widely used ones, and I categorize them into codes that build physics-based models (e.g. Tersoff) or build machine learning models (e.g. neural network).</p>\n<h4>Physics based</h4>\n<ul>\n<li>potfit <a href=\"https://www.potfit.net/wiki/doku.php\">https://www.potfit.net/wiki/doku.php</a></li>\n<li>KLIFF <a href=\"https://github.com/openkim/kliff\">https://github.com/openkim/kliff</a></li>\n<li>atomicrex <a href=\"https://www.atomicrex.org\">https://www.atomicrex.org</a></li>\n</ul>\n<h4>Machine learning</h4>\n<ul>\n<li>KLIFF (general purpose) <a href=\"https://github.com/openkim/kliff\">https://github.com/openkim/kliff</a></li>\n<li>MAML (general purpose) <a href=\"https://github.com/materialsvirtuallab/maml\">https://github.com/materialsvirtuallab/maml</a></li>\n<li>GAP (Gaussian approximation potential) <a href=\"https://libatoms.github.io\">https://libatoms.github.io</a></li>\n<li>MTP (Moment tensor potential) <a href=\"https://mlip.skoltech.ru\">https://mlip.skoltech.ru</a></li>\n<li>SNAP (Spectral neighbor analysis potential) <a href=\"https://github.com/FitSNAP/FitSNAP\">https://github.com/FitSNAP/FitSNAP</a></li>\n<li>PANNA (Behler--Parrinello type neural network) <a href=\"https://gitlab.com/PANNAdevs/panna\">https://gitlab.com/PANNAdevs/panna</a></li>\n<li>AMP (Behler--Parrinello type neural network) <a href=\"https://bitbucket.org/andrewpeterson/amp\">https://bitbucket.org/andrewpeterson/amp</a></li>\n<li>aenet (Behler--Parrinello type neural network) <a href=\"http://ann.atomistic.net\">http://ann.atomistic.net</a></li>\n<li>DeePMD <a href=\"https://github.com/deepmodeling/deepmd-kit\">https://github.com/deepmodeling/deepmd-kit</a></li>\n<li>SchNet (graph neural network) <a href=\"https://github.com/atomistic-machine-learning/schnetpack\">https://github.com/atomistic-machine-learning/schnetpack</a></li>\n<li>NequIP (equivariant graph neural network) <a href=\"https://github.com/mir-group/nequip\">https://github.com/mir-group/nequip</a></li>\n</ul>\n<h3>Deploy the model</h3>\n<p>Most of the fitting codes listed above do have an interface to either LAMMPS or ASE, or both. So deploying the fitted model for simulation is typically not a problem. PANNA, potfit, and KLIFF have interfaces to the KIM API, and potentials created with them can be used in multiple simulation codes.</p>","id":"2a4d5880-b65a-5169-b551-ed9ddeb53384","headings":[{"depth":1,"value":"Create a potential"},{"depth":2,"value":"Check existing potentials repository"},{"depth":2,"value":"Build new potentials"},{"depth":3,"value":"Assemble a dataset"},{"depth":3,"value":"Train the model"},{"depth":4,"value":"Physics based"},{"depth":4,"value":"Machine learning"},{"depth":3,"value":"Deploy the model"}],"frontmatter":{"title":"Develop a new potential","slug":"fit-new-potential","date":"April 19th, 2022","stack":["Interatomic potentials","Fitting","Machine learning","KLIFF","LAMMPS","KIM API","OpenKIM"],"description":"Steps to develop a new interatomic potential model."}},{"html":"<h1>Update (June 10, 2019)</h1>\n<p>We have implemented DRIP as a LAMMPS built-in model, and it is available since\nthe <code class=\"language-text\">5Jun19</code> version. Note</p>\n<ul>\n<li>It is in the <code class=\"language-text\">USER-MISC</code> package, so you need to add it when installing LAMMPS</li>\n<li>Examples at <code class=\"language-text\">lammps/examples/USER/misc/drip/</code> or you can find it\n<a href=\"https://github.com/lammps/lammps/tree/master/examples/USER/misc/drip\">here</a></li>\n<li>Google <code class=\"language-text\">lammps pair drip</code> to get documentation</li>\n</ul>\n<hr>\n<hr>\n<h1>Original post (March 10, 2019)</h1>\n<p>The <code class=\"language-text\">DRIP (Dihedral-angle-corrected registry-dependent interlayer potential)</code>\nprovides an improved description of the interlayer interactions for multilayer\ngraphene structures.\nSee <a href=\"https://doi.org/10.1103/physrevb.98.235404\">our paper</a> for more information\nabout it. We have implemented the <code class=\"language-text\">DRIP</code> as a KIM model.\nTo use it, follow the below instructions.</p>\n<h2>KIM-API</h2>\n<p>Follow <a href=\"https://openkim.org/kim-api/\">https://openkim.org/kim-api/</a> to install <code class=\"language-text\">kim-api-v2-2.0.0</code>.</p>\n<p>The instructions given there assume you have root access and install the API to\n<code class=\"language-text\">/usr/local</code>.\nIf you do not have root access or want to install to another directory, follow\n<code class=\"language-text\">INSTALL</code> in the <code class=\"language-text\">kim-api-v2-2.0.0</code> package.</p>\n<p>Note, if you chose not to install the <code class=\"language-text\">kim-api-v2-2.0.0</code> package in the standard\nlocation, you will need to get the kim-api library on <code class=\"language-text\">PATH</code> by doing some thing\nlike (assume you are using <code class=\"language-text\">Bash</code>):</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">source</span> activate path/to/the/installed/kim-api/library/bin/kim-api-v2-activate</code></pre></div>\n<h2>DRIP driver and model</h2>\n<p>The <code class=\"language-text\">DRIP</code> driver and model can be obtained from my <a href=\"https://github.com/mjwen\">GitHub</a>.\nThe \"v2.0.0\" branch of both the driver and model is compatible with <code class=\"language-text\">kim-api-v2-2.0.0</code>.\nBelow is a quick way to install them.</p>\n<h3>install the driver</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> clone <span class=\"token parameter variable\">--branch</span> v2.0.0 https://github.com/mjwen/DRIP_WenTadmor__MD_000000111111_000.git\n$ kim-api-v2-collections-management <span class=\"token function\">install</span> user ./DRIP_WenTadmor__MD_000000111111_000</code></pre></div>\n<h3>install the model</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> clone <span class=\"token parameter variable\">--branch</span> v2.0.0 https://github.com/mjwen/DRIP_WenTadmor_2018_C__MO_000000111111_000.git\n$ kim-api-v2-collections-management <span class=\"token function\">install</span> user ./DRIP_WenTadmor_2018_C__MO_000000111111_000</code></pre></div>\n<p>To check that the driver and model are successfully installed, do:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kim-api-v2-collections-management list</code></pre></div>\n<p>You should be able to see\n<code class=\"language-text\">DRIP_WenTadmor__MD_000000111111_000</code> and <code class=\"language-text\">DRIP_WenTadmor_2018_C__MO_000000111111_000</code>.\nin the <code class=\"language-text\">User Collection</code>.</p>\n<h2>LAMMPS (optional)</h2>\n<p>To use KIM with LAMMPS, you will need <code class=\"language-text\">pair_kim</code>.\nFor now please put <a href=\"https://mjwen.github.io/files/pair_kim.cpp\">pair_kim.cpp</a>\nand <a href=\"https://mjwen.github.io/files/pair_kim.h\">pair_kim.h</a> into your LAMMPS\n<code class=\"language-text\">src</code> directory (we have made pull request to LAMMPS and the next official\nrelease of LAMMPS will be compatible with KIM), and then make LAMMPS the usual\nway you do.</p>\n<p><code class=\"language-text\">pair_kim</code> now only supports <code class=\"language-text\">atom_style atomic</code>, so please use it in your\nLAMMPS input script.\n<code class=\"language-text\">DRIP</code> only provides the interlayer interactions, so if you want to use it\ntogether with a potential that provides the intralayer interaction (<code class=\"language-text\">REBO</code> for\nexample), you can use the <code class=\"language-text\">hybrid/overlay</code> pair style and put in the LAMMPS\nscript the following lines:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pair_style   hybrid/overlay kim DRIP_WenTadmor_2018_C__MO_000000111111_000 rebo\npair_coeff   * * kim C\npair_coeff   * * rebo CH.airebo C</code></pre></div>\n<p>Note, we implement the <code class=\"language-text\">DRIP</code> potential in KIM using a different approach from\nthe <code class=\"language-text\">KC</code> potential in LAMMPS.\nIn the KIM implementation of <code class=\"language-text\">DRIP</code>, we have a method to separate the simulation\nconfiguration into layers automatically.\nSo there is no need to assign atoms into different molecules as the LAMMPS <code class=\"language-text\">KC</code>\nimplementation.</p>","id":"06dbd1f5-2957-5ef6-bfc8-43f60be1dec0","headings":[{"depth":1,"value":"Update (June 10, 2019)"},{"depth":1,"value":"Original post (March 10, 2019)"},{"depth":2,"value":"KIM-API"},{"depth":2,"value":"DRIP driver and model"},{"depth":3,"value":"install the driver"},{"depth":3,"value":"install the model"},{"depth":2,"value":"LAMMPS (optional)"}],"frontmatter":{"title":"Use the DRIP potential","slug":"use-drip-potential","date":"March 10th, 2019","stack":["DRIP","Potential"],"description":"Use the DRIP potential in LAMMPS."}}]}},"pageContext":{}},"staticQueryHashes":["2467758271"]}